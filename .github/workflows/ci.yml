name: main

on: 
  push:
  pull_request:
  schedule:
    - cron: "15 2 8 * *" #run job on the 8th day of every month on the 15th minute of the 2nd hour

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
        smalltalk: [ 3.7.1 ]
        include:
          - smalltalk: 3.7.1
            os: ubuntu-22.04
          - smalltalk: 3.7.1
            os: macos-14
          - smalltalk: 3.7.1
            os: macos-13
          - smalltalk: 3.7.1
            os: macos-12
    runs-on: ${{ matrix.os }}
    env:
      GS_VERS: ${{ matrix.smalltalk }}
      PLATFORM: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: install GsDevKit_stones and superDoit 
        run: |
          # required files and directories for GemStone
          sudo mkdir /opt/gemstone
          sudo chmod oug+rwx /opt/gemstone
          sudo mkdir /opt/gemstone/locks
          sudo chmod oug+rwx /opt/gemstone/locks          

          # set up the basic env vars from which all other paths are derived
          export CI="true"
          echo "CI=$CI"
          echo "CI=true" >> "$GITHUB_ENV"
          echo "GITHUB_WORKSPACE= $GITHUB_WORKSPACE"
          export WORK_ROOT="$GITHUB_WORKSPACE/.."
          echo "WORK_ROOT=$WORK_ROOT"
          echo "WORK_ROOT=$GITHUB_WORKSPACE/.." >> "$GITHUB_ENV"
          # exploring
          echo "WORK_ROOT=$WORK_ROOT"
          cd $WORK_ROOT
          ls
          export ROWAN4GSDEVKIT_ROOT=$WORK_ROOT/Rowan4GsDevKit
          echo "ROWAN4GSDEVKIT_ROOT=$ROWAN4GSDEVKIT_ROOT"
          echo "ROWAN4GSDEVKIT_ROOT=$ROWAN4GSDEVKIT_ROOT" >> "$GITHUB_ENV"
          echo cloning
          git clone https://github.com/GsDevKit/GsDevKit_stones.git -b v2.1
          export GSDEVKIT_STONES_ROOT=$WORK_ROOT/GsDevKit_stones
          echo "GSDEVKIT_STONES_ROOT=$GSDEVKIT_STONES_ROOT"
          echo "GSDEVKIT_STONES_ROOT=$GSDEVKIT_STONES_ROOT" >> "$GITHUB_ENV"
          ls
          # clones superDoit and installs 3.7.1 to be used for .solo scripts
          $GSDEVKIT_STONES_ROOT/bin/install.sh $GS_VERS

          export SUPERDOIT_ROOT=$WORK_ROOT/superDoit
          echo "SUPERDOIT_ROOT=$WORK_ROOT/superDoit"
          echo "SUPERDOIT_ROOT=$WORK_ROOT/superDoit" >> "$GITHUB_ENV"

          echo " ls -altr $WORK_ROOT "
          ls -altr $WORK_ROOT
          echo " ls -altr $WORK_ROOT/.. "
          ls -altr $WORK_ROOT/..
          echo " ls -altr $GSDEVKIT_STONES_ROOT "
          ls -altr $GSDEVKIT_STONES_ROOT
          echo " ls -altr $SUPERDOIT_ROOT "
          ls -altr $SUPERDOIT_ROOT
          echo " ls -altr $SUPERDOIT_ROOT/bin "
          ls -altr $SUPERDOIT_ROOT/bin
          echo " ls -altr $SUPERDOIT_ROOT/dev "
          ls -altr $SUPERDOIT_ROOT/dev

          # configure shared memory on mac hosts
          $SUPERDOIT_ROOT/dev/setSharedMemory.sh
      - name: setup GsDevKit_stones
        run: |
          echo "CI=$CI"
          echo "SUPERDOIT_ROOT=$SUPERDOIT_ROOT"
          echo "GSDEVKIT_STONES_ROOT=$GSDEVKIT_STONES_ROOT"
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
          echo "CI=true" >> "$GITHUB_ENV"
          echo "WORK_ROOT=$WORK_ROOT"

          mkdir $WORK_ROOT/STONES_DATA_HOME
          export STONES_DATA_HOME="$WORK_ROOT/STONES_DATA_HOME"
          echo "STONES_DATA_HOME=$WORK_ROOT/STONES_DATA_HOME" >> "$GITHUB_ENV"
          echo "STONES_DATA_HOME=$STONES_DATA_HOME"

          mkdir $WORK_ROOT/STONES_HOME
          export STONES_HOME="$WORK_ROOT/STONES_HOME"
          echo "STONES_HOME=$WORK_ROOT/STONES_HOME" >> "$GITHUB_ENV"
          echo "STONES_HOME=$STONES_HOME"

          mkdir $STONES_HOME/git
          export STONES_git=$STONES_HOME/git
          echo "STONES_git=$STONES_HOME/git" >> "$GITHUB_ENV"
          mkdir $STONES_HOME/gemstone
          export STONES_gemstone=$STONES_HOME/gemstone
          echo "STONES_gemstone=$STONES_HOME/gemstone" >> "$GITHUB_ENV"

          export PATH=$ROWAN4GSDEVKIT_ROOT/bin:$SUPERDOIT_ROOT/bin:$GSDEVKIT_STONES_ROOT/bin:$PATH
          echo "PATH=$$PATH"
          echo "PATH=$ROWAN4GSDEVKIT_ROOT/bin:$SUPERDOIT_ROOT/bin:$GSDEVKIT_STONES_ROOT/bin:$PATH" >> "$GITHUB_ENV"

          echo "SUPERDOIT_ROOT/bin"
          ls -altr $SUPERDOIT_ROOT/bin
          echo "GSDEVKIT_STONES_ROOT/bin"
          ls -altr $GSDEVKIT_STONES_ROOT/bin
          echo "PATH=$PATH"
          echo "WORK_ROOT"
          ls -altr $WORK_ROOT
          echo "GITHUB_WORKSPACE"
          ls -altr $GITHUB_WORKSPACE
          echo "STONES_DATA_HOME"
          ls -altr $STONES_DATA_HOME
          echo "STONES_HOME"
          ls -altr $STONES_HOME

          echo "versionReport.solo" 
          versionReport.solo

          echo "gslist.solo" 
          gslist.solo -l
      - name: run master_baseTode.sh
        run: |
          echo "CI=$CI"
          echo "SUPERDOIT_ROOT=$SUPERDOIT_ROOT"
          echo "GSDEVKIT_STONES_ROOT=$GSDEVKIT_STONES_ROOT"
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
          echo "WORK_ROOT=$WORK_ROOT"          
          echo "STONES_DATA_HOME=$STONES_DATA_HOME"
          echo "STONES_HOME=$STONES_HOME"

          export registryHome=$STONES_HOME/test_Rowan4GsDevKit
          echo "registryHome=$STONES_HOME/test_Rowan4GsDevKit"
          echo "registryHome=$STONES_HOME/test_Rowan4GsDevKit" >> "$GITHUB_ENV"
          export devkitHome=$registryHome/devKit
          echo "devKitHome=$registryHome/devKit"
          echo "devKitHome=$registryHome/devKit" >> "$GITHUB_ENV"

          $ROWAN4GSDEVKIT_ROOT/tests/master_baseTode.sh
        shell: bash
      - name: generate a Rowan 3 project for doing seaside development (from README)
        run: |
          echo "CI=$CI"
          echo "SUPERDOIT_ROOT=$SUPERDOIT_ROOT"
          echo "GSDEVKIT_STONES_ROOT=$GSDEVKIT_STONES_ROOT"
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
          echo "WORK_ROOT=$WORK_ROOT"
          echo "STONES_DATA_HOME=$STONES_DATA_HOME"
          echo "STONES_HOME=$STONES_HOME"
          echo "registryHome=$registryHome"
          echo "devKitHome=$devKitHome"

          echo "devKitHome contents"
          ls -altr $devKitHome

          registryName=test_Rowan4GsDevKit
          stoneDirectory=`registryQuery.solo -r $registryName  --stonesDirectory`
          echo "stoneDirectory=$stoneDirectory"

          echo "stoneDirectory contents"
          ls -altr $stoneDirectory

          projectsHome=$stoneDirectory/rowan3_r4_$GS_VERS/projectsHome
          echo "projectsHome=$projectsHome"

          # generate a Rowan 3 project for doing seaside development
          rowanProjectName=seaside_rowan3
          $ROWAN4GSDEVKIT_ROOT/bin/generateProject.solo $ROWAN4GSDEVKIT_ROOT/packageMaps/371/seaside.ston \
              --projectName=$rowanProjectName --componentName=Core --projectsHome=$projectsHome \
              --devkitHome=$devKitHome
          # install the seaside_rowan3 project into rowan3_r4_3.7.1 stone
          cd $stoneDirectory/rowan3_r4_$GS_VERS
          installProject.stone file:projectsHome/$rowanProjectName/rowan/specs/seaside_rowan3.ston --projectsHome=projectsHome --ignoreInvalidCategories --noAutoInitialize
  slack-workflow-status:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - build
    runs-on: ubuntu-20.04
    steps:
       - name: Slack Workflow Notification
         uses: Gamesight/slack-workflow-status@master
         with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_DALEHENRICH}}
          name: 'action run' 
